apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: example-inline
spec:
  compositeTypeRef:
    apiVersion: example.crossplane.io/v1beta1
    kind: XR
  mode: Pipeline
  pipeline:
    - step: render-templates
      functionRef:
        name: function-go-templating
      input:
        apiVersion: gotemplating.fn.crossplane.io/v1beta1
        kind: GoTemplate
        source: Inline
        inline:
          template: |
            {{ $params := .observed.composite.resource.spec.parameters }}

            {{- define "providerConfigRef" }}
              providerConfigRef:
                name: {{ .observed.composite.resource.spec.parameters.providerConfigName  }}
            {{- end }}
            {{- define "networkId" }}
              networks.aws.platform.upbound.io/network-id: {{ .observed.composite.resource.spec.parameters.id }}
            {{- end }}
            {{- define "region" }}
              region: {{ .observed.composite.resource.spec.parameters.region }}
            {{- end }}
            {{- define "deletionPolicy" }}
              deletionPolicy: {{ .observed.composite.resource.spec.parameters.deletionPolicy | default "Delete" }}
            {{- end }}

            apiVersion: ec2.aws.upbound.io/v1beta1
            kind: VPC
            metadata:
              labels:
                {{- include "networkId" . | nindent 4 }}
              annotations:
                {{ setResourceNameAnnotation ("vpc") }}
            spec:
              forProvider:
                cidrBlock: 192.168.0.0/16
                enableDnsHostnames: true
                enableDnsSupport: true
                tags:
                  Name: {{ .observed.composite.resource.metadata.name }}
                {{- include "region" . | nindent 2 }}
              {{- include "providerConfigRef" . }}
              {{- include "deletionPolicy" . }}

            ---
            apiVersion: ec2.aws.upbound.io/v1beta1
            kind: InternetGateway
            metadata:
              labels:
                {{- include "networkId" . | nindent 4 }}
              annotations:
                {{ setResourceNameAnnotation ("igw") }}
            spec:
              forProvider:
                vpcIdSelector:
                  matchControllerRef: true
                {{- include "region" . | nindent 2 }}
              {{- include "providerConfigRef" . }}
              {{- include "deletionPolicy" . }}

            {{ $region := .observed.composite.resource.spec.parameters.region }}
            {{ $deletionPolicy := .observed.composite.resource.spec.parameters.deletionPolicy | default "Delete" }}

            {{- range $i, $subnet := $params.subnets }}
            ---
            apiVersion: ec2.aws.upbound.io/v1beta1
            kind: Subnet
            metadata:
              labels:
                  zone: {{ $subnet.availabilityZone }}
                  {{- if eq $subnet.type "private" }}
                  access: private
                  {{- else }}
                  access: public
                  {{- end }}
                  networks.aws.platform.upbound.io/network-id: {{ $params.id }}
              annotations:
                {{ setResourceNameAnnotation (printf "subnet-%s-%s" $subnet.availabilityZone $subnet.type) }}
            spec:
              forProvider:
                cidrBlock: 192.168.0.0/18
                {{ if eq $subnet.type "public" }}
                mapPublicIpOnLaunch: true
                {{ end }}
                tags:
                {{- if eq $subnet.type "private" }}
                  kubernetes.io/role/internal-elb: "1"
                {{- else }}
                  kubernetes.io/role/elb: "1"
                {{- end }}
                {{- if eq $subnet.type "public" }}
                  networks.aws.platform.upbound.io/network-id: {{ $params.id }}
                {{- end }}
                region: {{ $region }}
                vpcIdSelector:
                  matchControllerRef: true
                availabilityZone: {{ $subnet.availabilityZone }}
              providerConfigRef:
                name: {{ $params.providerConfigName }}
              deletionPolicy: {{ $deletionPolicy }}
            {{- end }}
            ---
            apiVersion: ec2.aws.upbound.io/v1beta1
            kind: RouteTable
            metadata:
              labels:
                {{- include "networkId" . | nindent 4 }}
              annotations:
                {{ setResourceNameAnnotation ("rt") }}
            spec:
              forProvider:
                vpcIdSelector:
                  matchControllerRef: true
                {{- include "region" . | nindent 2 }}
              {{- include "providerConfigRef" . }}
              {{- include "deletionPolicy" . }}
            ---
            apiVersion: ec2.aws.upbound.io/v1beta1
            kind: Route
            metadata:
              labels:
                {{- include "networkId" . | nindent 4 }}
              annotations:
                {{ setResourceNameAnnotation ("route") }}
            spec:
              forProvider:
                destinationCidrBlock: 0.0.0.0/0
                gatewayIdSelector:
                  matchControllerRef: true
                routeTableIdSelector:
                  matchControllerRef: true
                {{- include "region" . | nindent 2 }}
              {{- include "providerConfigRef" . }}
              {{- include "deletionPolicy" . }}
            ---
            apiVersion: ec2.aws.upbound.io/v1beta1
            kind: MainRouteTableAssociation
            metadata:
              labels:
                {{- include "networkId" . | nindent 4 }}
              annotations:
                {{ setResourceNameAnnotation ("mrt") }}
            spec:
              forProvider:
                routeTableIdSelector:
                  matchControllerRef: true
                vpcIdSelector:
                  matchControllerRef: true
                {{- include "region" . | nindent 2 }}
              {{- include "providerConfigRef" . }}
              {{- include "deletionPolicy" . }}
            {{- range $i, $subnet := $params.subnets }}
            ---
            kind: RouteTableAssociation
            metadata:
              labels:
                networks.aws.platform.upbound.io/network-id: {{ $params.id }}
              annotations:
                {{ setResourceNameAnnotation (printf "rta-%s-%s" $subnet.availabilityZone $subnet.type) }}
            spec:
              forProvider:
                routeTableIdSelector:
                  matchControllerRef: true
                subnetIdSelector:
                  matchControllerRef: true
                  region: {{ $region }}
                  matchLabels:
                    {{- if eq $subnet.type "private" }}
                    access: private
                    {{- else }}
                    access: public
                    {{- end }}
                    zone: {{ $subnet.availabilityZone }}
              providerConfigRef:
                name: {{ $params.providerConfigName }}
              deletionPolicy: {{ $deletionPolicy }}
            {{- end }}
            ---
            apiVersion: ec2.aws.upbound.io/v1beta1
            kind: SecurityGroup
            metadata:
              labels:
                {{- include "networkId" . | nindent 4 }}
              annotations:
                {{ setResourceNameAnnotation ("sg") }}
            spec:
              forProvider:
                description: Allow access to databases
                name: platform-ref-aws-cluster
                vpcIdSelector:
                  matchControllerRef: true
                {{- include "region" . | nindent 2 }}
              {{- include "providerConfigRef" . }}
              {{- include "deletionPolicy" . }}
            ---
            apiVersion: ec2.aws.upbound.io/v1beta1
            kind: SecurityGroupRule
            metadata:
              labels:
                {{- include "networkId" . | nindent 4 }}
              annotations:
                {{ setResourceNameAnnotation ("sgrp") }}
            spec:
              forProvider:
                cidrBlocks:
                  - 0.0.0.0/0
                description: Everywhere
                fromPort: 5432
                protocol: tcp
                securityGroupIdSelector:
                  matchControllerRef: true
                toPort: 5432
                type: ingress
                {{- include "region" . | nindent 2 }}
              {{- include "providerConfigRef" . }}
              {{- include "deletionPolicy" . }}
            ---
            apiVersion: ec2.aws.upbound.io/v1beta1
            kind: SecurityGroupRule
            metadata:
              labels:
                {{- include "networkId" . | nindent 4 }}
              annotations:
                {{ setResourceNameAnnotation ("sgrm") }}
            spec:
              forProvider:
                cidrBlocks:
                  - 0.0.0.0/0
                description: Everywhere
                fromPort: 3306
                protocol: tcp
                securityGroupIdSelector:
                  matchControllerRef: true
                toPort: 3306
                type: ingress
                {{- include "region" . | nindent 2 }}
              {{- include "providerConfigRef" . }}
              {{- include "deletionPolicy" . }}
            ---
            apiVersion: {{ .observed.composite.resource.apiVersion }}
            kind: {{ .observed.composite.resource.kind }}
            status:
              vpcId: {{ dig "resources" "vpc" "resource" "status" "atProvider" "id" "" $.observed }}
              subnetIds:
                {{- range $i, $subnet := $params.subnets }}
                - {{ dig "resources" (printf "subnet-%s-%s" $subnet.availabilityZone $subnet.type) "resource" "metadata" "annotations" "crossplane.io/external-name" "" $.observed }}
                {{- end }}
              publicSubnetIds:
                {{- range $i, $subnet := $params.subnets }}
                {{- if eq $subnet.type "public" }}
                - {{ dig "resources" (printf "subnet-%s-%s" $subnet.availabilityZone $subnet.type) "resource" "metadata" "annotations" "crossplane.io/external-name" "" $.observed }}
                {{- end }}
                {{- end }}
              privateSubnetIds:
                {{- range $i, $subnet := $params.subnets }}
                {{- if eq $subnet.type "private" }}
                - {{ dig "resources" (printf "subnet-%s-%s" $subnet.availabilityZone $subnet.type) "resource" "metadata" "annotations" "crossplane.io/external-name" "" $.observed }}
                {{- end }}
                {{- end }}
              securityGroupIds:
                - {{ dig "resources" "sg" "resource" "metadata" "annotations" "crossplane.io/external-name" "" $.observed }}
    - step: automatically-detect-ready-composed-resources
      functionRef:
        name: function-auto-ready
